{"version":3,"sources":["components/BugBox/BugBox.js","components/Nav/Nav.js","components/InProgress/InProgress.js","components/Completed/Completed.js","components/NeedHelp/NeedHelp.js","App.js","registerServiceWorker.js","index.js"],"names":["BugBox","_ref","children","react_default","a","createElement","Nav","InProgress","Completed","NeedHelp","App","className","Nav_Nav","BugBox_BugBox","InProgress_InProgress","NeedHelp_NeedHelp","Completed_Completed","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2RAceA,MAXf,SAAAC,GAA8B,IAAZC,EAAYD,EAAZC,SAChB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kBAEFF,EAAAC,EAAAC,cAAA,WAAMH,KCDGI,MANf,WACI,OACIH,EAAAC,EAAAC,cAAA,uBCIOE,MANf,WACI,OACIJ,EAAAC,EAAAC,cAAA,8BCIOG,MANf,WACI,OACIL,EAAAC,EAAAC,cAAA,2BCIOI,MANf,WACI,OACIN,EAAAC,EAAAC,cAAA,uBCmBOK,mLAZX,OACEP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACbR,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAACQ,EAAD,MACAV,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAD,cARUC,aCCZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBnB,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB3B,OAAOC,UAC3C2B,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAAyB,OAAMH,GAAN,sBAEN7B,EAwCX,SAAiCO,GAE/B0B,MAAM1B,GACHI,KAAK,SAAAuB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7BT,OAAOC,SAASsC,aAKpBnC,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEAzDAsB,CAAwBnC,GAHxBD,EAAgBC,MC7BxBoC","file":"static/js/main.06e239cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nfunction BugBox({ children }) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>Todo</p>\r\n      </div>\r\n      <div>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BugBox;\r\n","import React from \"react\"\r\n\r\nfunction Nav()  {\r\n    return (\r\n        <h1>Nick Sux</h1>\r\n    )\r\n} \r\n\r\nexport default Nav","import React from \"react\"\r\n\r\nfunction InProgress()  {\r\n    return (\r\n        <h1>California Love</h1>\r\n    )\r\n} \r\n\r\nexport default InProgress","import React from \"react\"\r\n\r\nfunction Completed()  {\r\n    return (\r\n        <h1>Peepeepoopoo</h1>\r\n    )\r\n} \r\n\r\nexport default Completed","import React from \"react\"\r\n\r\nfunction NeedHelp()  {\r\n    return (\r\n        <h1>Nick Sux</h1>\r\n    )\r\n} \r\n\r\nexport default NeedHelp","/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BugBox from \"./components/BugBox/BugBox\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport InProgress from \"./components/InProgress/InProgress\";\r\nimport Completed from \"./components/Completed/Completed\";\r\nimport NeedHelp from \"./components/NeedHelp/NeedHelp\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Nav />\r\n        <BugBox></BugBox>\r\n        <InProgress></InProgress>\r\n        <NeedHelp></NeedHelp>\r\n        <Completed></Completed>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}